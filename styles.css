/* Take care of ALL styling here unless constrained to style within javascript code.*/
/* Don't forget you can style on an event, while running programming logic on an event is for js.*/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background-color: rgb(27, 27, 27);
    height: 100vh;
    display: flex;
    justify-content: center;
    gap: 100px;
}

.grid {
    display: flex;
    flex-wrap: wrap;
    height: 500px;
    width: 500px;
    background-color: navy;
    flex-shrink: 0;
}

.options-container > label {
    margin: 10px 0px;
}


h2 {
    text-align: center;
}

h2, .options-container label, label[for="grid-size"] {
    font-weight: 600;
}

h2, .grid-size.options-container label, label[for="grid-size"] {
    font-size: 18px;
}

div#options > div {
    width: 300px;
    display: flex;
    flex-direction: column;
    gap: 20px;
    border: none;
    background-color: #2a2a2a;
    color: white;
}

h1 {
    text-align: center;
    font-family: 'Press Start 2P', fantasy;
    color: #ff6161;
    font-size: 50px;
    padding: 20px;
}

div#options {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 2.2rem;
}

div#sizing-controls {
    display: flex;
    justify-content: center;
    gap: 20px;
}

label[for="grid-size"] {
    font-family: 'Urbanist', sans-serif;
    color: #ffffff;
    align-self: center;
}

button, input[type="number"] {
    font-family: 'Urbanist', sans-serif;
    font-weight: bold;
    text-align: center;
}

.grid-container {
    display: flex;
    flex-direction: column;
    gap: 20px;
    justify-content: center;
    align-items: center;
}

.options-container {
    font-family: 'Urbanist', sans-serif;
    padding: 20px;
    border-radius: 10px;
}

.option-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

button {
    padding: 0.8em 1em;
    border-radius: 0.7em;
}

#general-options {
    display: flex;
    justify-content: center;
}


/* Input and button styling */

input[type="radio"], input[type="checkbox"] {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    width: 15px;
    height: 15px;  
    padding: 2px;
    background-clip: content-box;
    border: 2px solid #ffffff;
    border-radius: 50%;
}

input[type="radio"]:checked, input[type="checkbox"]:checked {
    background-color: rgb(255, 255, 255);
}

input[type="radio"], input[type="checkbox"], input[type="color"], button, i, label {
    cursor: pointer;
}

button, i {
    transition: transform 0.2s;
}

button:hover {
    transform: scale(1.1);
}

i:hover {
    transform: scale(1.2);
}

/*Style the slider*/

input[type="range"] {
    -webkit-appearance: none;
    height: 3px;
    width: 100px;
    background-color: #ddd;
    border-radius: 5px;
    outline: none;
    border: none;
}

input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    height: 20px;
    width: 20px;
    background: #d0d0d0;
    border-radius: 50%;
    cursor: pointer;
}


/*Progress bar only supported in mozilla browser*/
input[type="range"]::-moz-range-progress {
    background: #000;
}


